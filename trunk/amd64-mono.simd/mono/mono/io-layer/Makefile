# Postprocessed with patch-quiet.sh
# Makefile.in generated by automake 1.10.1 from Makefile.am.
# mono/io-layer/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/mono
pkglibdir = $(libdir)/mono
pkgincludedir = $(includedir)/mono
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = mono/io-layer
DIST_COMMON = $(am__libwapiinclude_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/libtool.m4 \
	$(top_srcdir)/ltoptions.m4 $(top_srcdir)/ltsugar.m4 \
	$(top_srcdir)/ltversion.m4 $(top_srcdir)/lt~obsolete.m4 \
	$(top_srcdir)/nls.m4 $(top_srcdir)/po.m4 \
	$(top_srcdir)/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libwapi_la_LIBADD =
am__libwapi_la_SOURCES_DIST = access.h atomic.c atomic.h collection.c \
	collection.h context.c context.h critical-sections.c \
	critical-sections.h critical-section-private.h error.c error.h \
	events.c events.h event-private.h handles.c handles.h \
	handles-private.h io.c io.h io-portability.c io-portability.h \
	io-private.h io-layer.h macros.h messages.c messages.h misc.c \
	misc-private.h mutexes.c mutexes.h mutex-private.h \
	mono-mutex.c mono-mutex.h mono-spinlock.h processes.c \
	processes.h process-private.h security.c security.h \
	semaphores.c semaphores.h semaphore-private.h shared.c \
	shared.h sockets.c sockets.h socket-private.h \
	socket-wrappers.h status.h system.c system.h threads.c \
	threads.h thread-private.h timefuncs.c timefuncs.h \
	timefuncs-private.h types.h uglify.h versioninfo.c \
	versioninfo.h wait.c wait.h wapi_glob.h wapi_glob.c wapi.h \
	wapi-private.h hppa_atomic.S io-layer-dummy.c
am__objects_1 = atomic.lo collection.lo context.lo \
	critical-sections.lo error.lo events.lo handles.lo io.lo \
	io-portability.lo messages.lo misc.lo mutexes.lo mono-mutex.lo \
	processes.lo security.lo semaphores.lo shared.lo sockets.lo \
	system.lo threads.lo timefuncs.lo versioninfo.lo wait.lo \
	wapi_glob.lo
am__objects_2 = libwapi_la-hppa_atomic.lo
am__objects_3 = io-layer-dummy.lo
am_libwapi_la_OBJECTS =  \
	$(am__objects_1)
#am_libwapi_la_OBJECTS =  \
#	$(am__objects_1) \
#	$(am__objects_2)
#am_libwapi_la_OBJECTS = $(am__objects_3)
libwapi_la_OBJECTS = $(am_libwapi_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles quiet
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libwapi_la_SOURCES)
DIST_SOURCES = $(am__libwapi_la_SOURCES_DIST)
am__libwapiinclude_HEADERS_DIST = access.h atomic.h collection.h \
	context.h critical-sections.h error.h events.h handles.h io.h \
	io-layer.h io-portability.h macros.h messages.h mono-mutex.h \
	mutexes.h processes.h security.h semaphores.h sockets.h \
	status.h system.h threads.h timefuncs.h types.h uglify.h \
	versioninfo.h wait.h wapi.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libwapiincludedir)"
libwapiincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libwapiinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jmaine/mono_source/mono/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/jmaine/mono_source/mono/missing --run tar
API_VER = 1.0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/jmaine/mono_source/mono/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jmaine/mono_source/mono/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jmaine/mono_source/mono/missing --run automake-1.10
AWK = mawk
BASE_DEPENDENCIES_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
BASE_DEPENDENCIES_LIBS = -lglib-2.0  
BISON = yes
BUILD_EXEEXT = 
BUILD_GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
BUILD_GLIB_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -O2 -fno-strict-aliasing -Wdeclaration-after-statement -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -mno-tls-direct-seg-refs
CFLAGS_FOR_BUILD = -g -O2
CPP = gcc -E
CPPFLAGS =  -DGC_LINUX_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP -DUSE_MUNMAP  -DUSE_COMPILER_TLS
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_SHARED_HANDLES = 
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = 
DTRACE = 
DTRACEFLAGS = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_MACRO_VERSION = 0.17
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GMODULE_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
HAVE_BOEHM_GC = 
HAVE_MSGFMT = yes
HOST_CC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTL = libc.so.6
LD = /usr/bin/ld
LDFLAGS = 
LIBC = libc.so.6
LIBGC_CFLAGS = -I$(top_srcdir)/libgc/include
LIBGC_LIBS = $(top_builddir)/libgc/libmonogc.la
LIBGC_STATIC_LIBS = $(top_builddir)/libgc/libmonogc-static.la
LIBOBJS = 
LIBS = -lrt  -ldl -lpthread -lm
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/jmaine/mono_source/mono/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MONO_DL_NEED_USCORE = 0
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPROFILE_CFLAGS = 
OPROFILE_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = mono
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE = libsqlite.so.0
SQLITE3 = libsqlite3.so.0
STRIP = strip
USE_NLS = yes
VERSION = 2.5
X11 = libX11.so.6
XATTR_LIB = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XMKMF = 
abs_builddir = /home/jmaine/mono_source/mono/mono/io-layer
abs_srcdir = /home/jmaine/mono_source/mono/mono/io-layer
abs_top_builddir = /home/jmaine/mono_source/mono
abs_top_srcdir = /home/jmaine/mono_source/mono
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
arch_target = amd64
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
eglib_dir = 
exec_prefix = ${prefix}
export_ldflags = -Wl,--export-dynamic
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
ikvm_native_dir = ikvm-native
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/jmaine/mono_source/mono/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libgc_dir = libgc
libgdiplus_loc = 
libmono_cflags = -D_REENTRANT
libmono_ldflags = -lpthread -lrt  -ldl -lpthread -lm
libsuffix = .so
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mcs_topdir = $(top_srcdir)/../mcs
mcs_topdir_from_srcdir = $(top_builddir)/../mcs
mkdir_p = /bin/mkdir -p
mono_build_root = /home/jmaine/mono_source/mono
mono_cfg_dir = /home/jmaine/mono_source/mono/runtime/etc
mono_runtime = mono/mini/mono
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
reloc_libdir = lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libgc
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_builddir = ../..
top_srcdir = ../..
noinst_LTLIBRARIES = libwapi.la
INCLUDES = \
	$(GLIB_CFLAGS)		\
	$(LIBGC_CFLAGS)		\
	-DMONO_BINDIR=\""$(bindir)"\"	\
	-I$(top_srcdir)	

libwapiincludedir = $(includedir)/mono-$(API_VER)/mono/io-layer
OTHER_H = \
	access.h	\
	atomic.h	\
	collection.h	\
	context.h	\
	critical-sections.h	\
	error.h		\
	events.h	\
	handles.h	\
	io.h		\
	io-layer.h	\
	io-portability.h	\
	macros.h	\
	messages.h	\
	mono-mutex.h	\
	mutexes.h	\
	processes.h	\
	security.h	\
	semaphores.h	\
	sockets.h	\
	status.h	\
	system.h	\
	threads.h	\
	timefuncs.h	\
	types.h		\
	uglify.h	\
	versioninfo.h	\
	wait.h		\
	wapi.h	

OTHER_SRC = \
	access.h		\
	atomic.c		\
	atomic.h		\
	collection.c		\
	collection.h		\
	context.c		\
	context.h		\
	critical-sections.c	\
	critical-sections.h	\
	critical-section-private.h	\
	error.c			\
	error.h			\
	events.c		\
	events.h		\
	event-private.h		\
	handles.c		\
	handles.h		\
	handles-private.h	\
	io.c			\
	io.h			\
	io-portability.c	\
	io-portability.h	\
	io-private.h		\
	io-layer.h		\
	macros.h		\
	messages.c		\
	messages.h		\
	misc.c			\
	misc-private.h		\
	mutexes.c		\
	mutexes.h		\
	mutex-private.h		\
	mono-mutex.c		\
	mono-mutex.h		\
	mono-spinlock.h		\
	processes.c		\
	processes.h		\
	process-private.h	\
	security.c		\
	security.h		\
	semaphores.c		\
	semaphores.h		\
	semaphore-private.h	\
	shared.c		\
	shared.h		\
	sockets.c		\
	sockets.h		\
	socket-private.h	\
	socket-wrappers.h	\
	status.h		\
	system.c		\
	system.h		\
	threads.c		\
	threads.h		\
	thread-private.h	\
	timefuncs.c		\
	timefuncs.h		\
	timefuncs-private.h	\
	types.h			\
	uglify.h		\
	versioninfo.c		\
	versioninfo.h		\
	wait.c			\
	wait.h			\
	wapi_glob.h		\
	wapi_glob.c		\
	wapi.h			\
	wapi-private.h

WINDOWS_H = \
	io-layer.h

WINDOWS_SRC = \
	io-layer.h		\
	io-layer-dummy.c

HPPA_SRC = \
	hppa_atomic.S

libwapi_la_SOURCES = $(OTHER_SRC)
#libwapi_la_SOURCES = $(OTHER_SRC) $(HPPA_SRC)
#libwapi_la_SOURCES = $(WINDOWS_SRC)
libwapiinclude_HEADERS = $(OTHER_H)
#libwapiinclude_HEADERS = $(WINDOWS_H)
# to enable pick up of config.h
#libwapi_la_CCASFLAGS = -I$(top_builddir)
EXTRA_DIST = \
	$(WINDOWS_SRC)	\
        $(HPPA_SRC) \
	$(OTHER_SRC)

all: all-am

.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  mono/io-layer/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  mono/io-layer/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libwapi.la: $(libwapi_la_OBJECTS) $(libwapi_la_DEPENDENCIES) 
	$(if $(V),,@echo -e "LD\t$@";) $(LINK)  $(libwapi_la_OBJECTS) $(libwapi_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/atomic.Plo
include ./$(DEPDIR)/collection.Plo
include ./$(DEPDIR)/context.Plo
include ./$(DEPDIR)/critical-sections.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/events.Plo
include ./$(DEPDIR)/handles.Plo
include ./$(DEPDIR)/io-layer-dummy.Plo
include ./$(DEPDIR)/io-portability.Plo
include ./$(DEPDIR)/io.Plo
include ./$(DEPDIR)/libwapi_la-hppa_atomic.Plo
include ./$(DEPDIR)/messages.Plo
include ./$(DEPDIR)/misc.Plo
include ./$(DEPDIR)/mono-mutex.Plo
include ./$(DEPDIR)/mutexes.Plo
include ./$(DEPDIR)/processes.Plo
include ./$(DEPDIR)/security.Plo
include ./$(DEPDIR)/semaphores.Plo
include ./$(DEPDIR)/shared.Plo
include ./$(DEPDIR)/sockets.Plo
include ./$(DEPDIR)/system.Plo
include ./$(DEPDIR)/threads.Plo
include ./$(DEPDIR)/timefuncs.Plo
include ./$(DEPDIR)/versioninfo.Plo
include ./$(DEPDIR)/wait.Plo
include ./$(DEPDIR)/wapi_glob.Plo

.S.o:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(LTCPPASCOMPILE) -c -o $@ $<

libwapi_la-hppa_atomic.lo: hppa_atomic.S
	$(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwapi_la_CCASFLAGS) $(CCASFLAGS) -MT libwapi_la-hppa_atomic.lo -MD -MP -MF $(DEPDIR)/libwapi_la-hppa_atomic.Tpo -c -o libwapi_la-hppa_atomic.lo `test -f 'hppa_atomic.S' || echo '$(srcdir)/'`hppa_atomic.S
	$(if $(V),,@)mv -f $(DEPDIR)/libwapi_la-hppa_atomic.Tpo $(DEPDIR)/libwapi_la-hppa_atomic.Plo
#	source='hppa_atomic.S' object='libwapi_la-hppa_atomic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwapi_la_CCASFLAGS) $(CCASFLAGS) -c -o libwapi_la-hppa_atomic.lo `test -f 'hppa_atomic.S' || echo '$(srcdir)/'`hppa_atomic.S

.c.o:
	$(if $(V),,@echo -e "CC\t$@";) $(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(if $(V),,@echo -e "CC\t$@";) $(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(if $(V),,@echo -e "CC\t$@";) $(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libwapiincludeHEADERS: $(libwapiinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libwapiincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libwapiincludedir)"
	@list='$(libwapiinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libwapiincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libwapiincludedir)/$$f'"; \
	  $(libwapiincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libwapiincludedir)/$$f"; \
	done

uninstall-libwapiincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libwapiinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libwapiincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libwapiincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libwapiincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libwapiincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libwapiincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libwapiincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libwapiincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
