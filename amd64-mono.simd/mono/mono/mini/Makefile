# Postprocessed with patch-quiet.sh
# Makefile.in generated by automake 1.10.1 from Makefile.am.
# mono/mini/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/mono
pkglibdir = $(libdir)/mono
pkgincludedir = $(includedir)/mono
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS =  \
	mono$(EXEEXT)
#bin_PROGRAMS = mono$(EXEEXT) \
#	monow$(EXEEXT)
noinst_PROGRAMS = genmdesc$(EXEEXT)
subdir = mono/mini
DIST_COMMON = README $(libmonoinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in ChangeLog TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/libtool.m4 \
	$(top_srcdir)/ltoptions.m4 $(top_srcdir)/ltsugar.m4 \
	$(top_srcdir)/ltversion.m4 $(top_srcdir)/lt~obsolete.m4 \
	$(top_srcdir)/nls.m4 $(top_srcdir)/po.m4 \
	$(top_srcdir)/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libmonoincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_2 =  \
	$(monodir)/libgc/libmonogc-static.la
am__DEPENDENCIES_3 =  \
	$(monodir)/mono/metadata/libmonoruntime-static.la \
	$(monodir)/mono/io-layer/libwapi.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
#am__DEPENDENCIES_4 = mono-dtrace.$(OBJEXT)
libmono_static_la_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4)
am__libmono_static_la_SOURCES_DIST = mini.c ir-emit.h method-to-ir.c \
	decompose.c mini.h version.h optflags-def.h jit-icalls.h \
	jit-icalls.c trace.c trace.h patch-info.h mini-ops.h \
	mini-arch.h dominators.c cfold.c regalloc.c regalloc.h \
	helpers.c liveness.c ssa.c abcremoval.c abcremoval.h ssapre.c \
	ssapre.h local-propagation.c driver.c debug-mini.c \
	debug-mini.h linear-scan.c aot-compiler.c aot-runtime.c \
	graph.c mini-codegen.c mini-exceptions.c mini-trampolines.c \
	declsec.c declsec.h wapihandles.c branch-opts.c \
	mini-generic-sharing.c regalloc2.c simd-methods.h \
	simd-intrinsics.c unwind.h unwind.c image-writer.h \
	image-writer.c dwarfwriter.h dwarfwriter.c mini-alpha.c \
	mini-alpha.h exceptions-alpha.c tramp-alpha.c debug-debugger.c \
	debug-debugger.h mdb-debug-info32.s mdb-debug-info64.s \
	mini-amd64.c mini-amd64.h exceptions-amd64.c tramp-amd64.c \
	mini-arm.c mini-arm.h exceptions-arm.c tramp-arm.c mini-hppa.c \
	mini-hppa.h exceptions-hppa.c tramp-hppa.c mini-ia64.c \
	mini-ia64.h exceptions-ia64.c tramp-ia64.c mini-mips.c \
	mini-mips.h exceptions-mips.c tramp-mips.c mini-ppc.c \
	mini-ppc.h exceptions-ppc.c tramp-ppc.c mini-s390.c \
	mini-s390.h exceptions-s390.c tramp-s390.c mini-s390x.c \
	mini-s390x.h exceptions-s390x.c tramp-s390x.c mini-sparc.c \
	mini-sparc.h exceptions-sparc.c tramp-sparc.c mini-x86.c \
	mini-x86.h exceptions-x86.c tramp-x86.c mini-darwin.c \
	mini-posix.c mini-windows.c
am__objects_1 = mini.lo method-to-ir.lo decompose.lo jit-icalls.lo \
	trace.lo dominators.lo cfold.lo regalloc.lo helpers.lo \
	liveness.lo ssa.lo abcremoval.lo ssapre.lo \
	local-propagation.lo driver.lo debug-mini.lo linear-scan.lo \
	aot-compiler.lo aot-runtime.lo graph.lo mini-codegen.lo \
	mini-exceptions.lo mini-trampolines.lo declsec.lo \
	wapihandles.lo branch-opts.lo mini-generic-sharing.lo \
	regalloc2.lo simd-intrinsics.lo unwind.lo image-writer.lo \
	dwarfwriter.lo
am__objects_2 = mini-alpha.lo exceptions-alpha.lo tramp-alpha.lo
##am__objects_3 = mdb-debug-info32.lo
am__objects_3 =  \
	mdb-debug-info64.lo
am__objects_4 = debug-debugger.lo \
	$(am__objects_3)
am__objects_5 = mini-amd64.lo exceptions-amd64.lo tramp-amd64.lo
am__objects_6 = mini-arm.lo exceptions-arm.lo tramp-arm.lo
am__objects_7 = mini-hppa.lo exceptions-hppa.lo tramp-hppa.lo
am__objects_8 = mini-ia64.lo exceptions-ia64.lo tramp-ia64.lo
am__objects_9 = mini-mips.lo exceptions-mips.lo tramp-mips.lo
am__objects_10 = mini-ppc.lo exceptions-ppc.lo tramp-ppc.lo
am__objects_11 = mini-s390.lo exceptions-s390.lo tramp-s390.lo
am__objects_12 = mini-s390x.lo exceptions-s390x.lo tramp-s390x.lo
am__objects_13 = mini-sparc.lo exceptions-sparc.lo tramp-sparc.lo
am__objects_14 = mini-x86.lo exceptions-x86.lo tramp-x86.lo
##am__objects_15 = $(am__objects_14) \
##	$(am__objects_4)
##am__objects_15 = $(am__objects_13)
##am__objects_15 = $(am__objects_13)
##am__objects_15 = $(am__objects_12)
##am__objects_15 = $(am__objects_11)
##am__objects_15 = $(am__objects_10)
##am__objects_15 = $(am__objects_10)
##am__objects_15 = $(am__objects_9)
##am__objects_15 = $(am__objects_8)
##am__objects_15 = $(am__objects_7)
##am__objects_15 = $(am__objects_6)
am__objects_15 = $(am__objects_5) \
	$(am__objects_4)
#am__objects_15 = $(am__objects_2) $(am__objects_4)
am__objects_16 = mini-darwin.lo
am__objects_17 = mini-posix.lo
am__objects_18 = mini-windows.lo
##am__objects_19 = $(am__objects_18)
am__objects_19 = $(am__objects_17)
#am__objects_19 = $(am__objects_16) \
#	$(am__objects_17)
am__objects_20 = $(am__objects_1) $(am__objects_15) $(am__objects_19)
am_libmono_static_la_OBJECTS = $(am__objects_20)
nodist_libmono_static_la_OBJECTS =
libmono_static_la_OBJECTS = $(am_libmono_static_la_OBJECTS) \
	$(nodist_libmono_static_la_OBJECTS)
libmono_static_la_LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libmono_static_la_LDFLAGS) $(LDFLAGS) -o $@
am_libmono_static_la_rpath =
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_5 =  \
	$(monodir)/libgc/libmonogc.la
am__DEPENDENCIES_6 = $(monodir)/mono/metadata/libmonoruntime.la \
	$(monodir)/mono/io-layer/libwapi.la \
	$(monodir)/mono/utils/libmonoutils.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_5)
#am__DEPENDENCIES_7 =  \
#	.libs/mono-dtrace.$(OBJEXT)
libmono_la_DEPENDENCIES = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7)
am__libmono_la_SOURCES_DIST = mini.c ir-emit.h method-to-ir.c \
	decompose.c mini.h version.h optflags-def.h jit-icalls.h \
	jit-icalls.c trace.c trace.h patch-info.h mini-ops.h \
	mini-arch.h dominators.c cfold.c regalloc.c regalloc.h \
	helpers.c liveness.c ssa.c abcremoval.c abcremoval.h ssapre.c \
	ssapre.h local-propagation.c driver.c debug-mini.c \
	debug-mini.h linear-scan.c aot-compiler.c aot-runtime.c \
	graph.c mini-codegen.c mini-exceptions.c mini-trampolines.c \
	declsec.c declsec.h wapihandles.c branch-opts.c \
	mini-generic-sharing.c regalloc2.c simd-methods.h \
	simd-intrinsics.c unwind.h unwind.c image-writer.h \
	image-writer.c dwarfwriter.h dwarfwriter.c mini-alpha.c \
	mini-alpha.h exceptions-alpha.c tramp-alpha.c debug-debugger.c \
	debug-debugger.h mdb-debug-info32.s mdb-debug-info64.s \
	mini-amd64.c mini-amd64.h exceptions-amd64.c tramp-amd64.c \
	mini-arm.c mini-arm.h exceptions-arm.c tramp-arm.c mini-hppa.c \
	mini-hppa.h exceptions-hppa.c tramp-hppa.c mini-ia64.c \
	mini-ia64.h exceptions-ia64.c tramp-ia64.c mini-mips.c \
	mini-mips.h exceptions-mips.c tramp-mips.c mini-ppc.c \
	mini-ppc.h exceptions-ppc.c tramp-ppc.c mini-s390.c \
	mini-s390.h exceptions-s390.c tramp-s390.c mini-s390x.c \
	mini-s390x.h exceptions-s390x.c tramp-s390x.c mini-sparc.c \
	mini-sparc.h exceptions-sparc.c tramp-sparc.c mini-x86.c \
	mini-x86.h exceptions-x86.c tramp-x86.c mini-darwin.c \
	mini-posix.c mini-windows.c
am_libmono_la_OBJECTS = $(am__objects_1) $(am__objects_15) \
	$(am__objects_19)
libmono_la_OBJECTS = $(am_libmono_la_OBJECTS)
libmono_la_LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libmono_la_LDFLAGS) $(LDFLAGS) -o $@
am_libmono_la_rpath = -rpath $(libdir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_genmdesc_OBJECTS = genmdesc-genmdesc.$(OBJEXT) \
	genmdesc-helpers.$(OBJEXT)
genmdesc_OBJECTS = $(am_genmdesc_OBJECTS)
genmdesc_DEPENDENCIES = $(monodir)/mono/utils/libmonoutils.la \
	$(monodir)/mono/metadata/opcodes.lo $(am__DEPENDENCIES_1)
genmdesc_LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(genmdesc_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mono_OBJECTS = main.$(OBJEXT)
mono_OBJECTS = $(am_mono_OBJECTS)
mono_DEPENDENCIES = $(MONO_LIB) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_4)
mono_LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(mono_LDFLAGS) \
	$(LDFLAGS) -o $@
am__monow_SOURCES_DIST = main.c
am__objects_21 = main.$(OBJEXT)
#am_monow_OBJECTS = $(am__objects_21)
monow_OBJECTS = $(am_monow_OBJECTS)
am__DEPENDENCIES_8 = $(MONO_LIB) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_4)
#monow_DEPENDENCIES = $(am__DEPENDENCIES_8)
monow_LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(monow_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles quiet
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) $(if $(V),,--quiet) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCCASCOMPILE = $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
SOURCES = $(libmono_static_la_SOURCES) \
	$(nodist_libmono_static_la_SOURCES) $(libmono_la_SOURCES) \
	$(genmdesc_SOURCES) $(mono_SOURCES) $(monow_SOURCES)
DIST_SOURCES = $(am__libmono_static_la_SOURCES_DIST) \
	$(am__libmono_la_SOURCES_DIST) $(genmdesc_SOURCES) \
	$(mono_SOURCES) $(am__monow_SOURCES_DIST)
libmonoincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libmonoinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jmaine/mono_source/mono/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/jmaine/mono_source/mono/missing --run tar
API_VER = 1.0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/jmaine/mono_source/mono/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jmaine/mono_source/mono/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jmaine/mono_source/mono/missing --run automake-1.10
AWK = mawk
BASE_DEPENDENCIES_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
BASE_DEPENDENCIES_LIBS = -lglib-2.0  
BISON = yes
BUILD_EXEEXT = 
BUILD_GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
BUILD_GLIB_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -O2 -fno-strict-aliasing -Wdeclaration-after-statement -g -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes  -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-cast-qual -Wwrite-strings -mno-tls-direct-seg-refs
CFLAGS_FOR_BUILD = -g -O2
CPP = gcc -E
CPPFLAGS =  -DGC_LINUX_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP -DUSE_MUNMAP  -DUSE_COMPILER_TLS
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_SHARED_HANDLES = 
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = 
DTRACE = 
DTRACEFLAGS = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_MACRO_VERSION = 0.17
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GMODULE_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /bin/grep
HAVE_BOEHM_GC = 
HAVE_MSGFMT = yes
HOST_CC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTL = libc.so.6
LD = /usr/bin/ld
LDFLAGS = 
LIBC = libc.so.6
LIBGC_CFLAGS = -I$(top_srcdir)/libgc/include
LIBGC_LIBS = $(top_builddir)/libgc/libmonogc.la
LIBGC_STATIC_LIBS = $(top_builddir)/libgc/libmonogc-static.la
LIBOBJS = 
LIBS = -lrt  -ldl -lpthread -lm
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/jmaine/mono_source/mono/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MONO_DL_NEED_USCORE = 0
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPROFILE_CFLAGS = 
OPROFILE_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = mono
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE = libsqlite.so.0
SQLITE3 = libsqlite3.so.0
STRIP = strip
USE_NLS = yes
VERSION = 2.5
X11 = libX11.so.6
XATTR_LIB = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XMKMF = 
abs_builddir = /home/jmaine/mono_source/mono/mono/mini
abs_srcdir = /home/jmaine/mono_source/mono/mono/mini
abs_top_builddir = /home/jmaine/mono_source/mono
abs_top_srcdir = /home/jmaine/mono_source/mono
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
arch_target = amd64
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
eglib_dir = 
exec_prefix = ${prefix}
export_ldflags = -Wl,--export-dynamic
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
ikvm_native_dir = ikvm-native
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/jmaine/mono_source/mono/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libgc_dir = libgc
libgdiplus_loc = 
libmono_cflags = -D_REENTRANT
libmono_ldflags = -lpthread -lrt  -ldl -lpthread -lm
libsuffix = .so
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mcs_topdir = $(top_srcdir)/../mcs
mcs_topdir_from_srcdir = $(top_builddir)/../mcs
mkdir_p = /bin/mkdir -p
mono_build_root = /home/jmaine/mono_source/mono
mono_cfg_dir = /home/jmaine/mono_source/mono/runtime/etc
mono_runtime = mono/mini/mono
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
reloc_libdir = lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libgc
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_builddir = ../..
top_srcdir = ../..
count = 100000
mtest = for_loop
monodir = $(top_builddir)
#libgc_libs = $(LIBGC_LIBS)

# This is needed for automake dependency generation
libgc_libs = $(monodir)/libgc/libmonogc.la
#libgc_static_libs = $(LIBGC_STATIC_LIBS)
libgc_static_libs = $(monodir)/libgc/libmonogc-static.la
libs = \
	$(monodir)/mono/metadata/libmonoruntime.la	\
	$(monodir)/mono/io-layer/libwapi.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS)	\
	$(libgc_libs)

static_libs = \
	$(monodir)/mono/metadata/libmonoruntime-static.la	\
	$(monodir)/mono/io-layer/libwapi.la	\
	$(monodir)/mono/utils/libmonoutils.la \
	$(GLIB_LIBS)	\
	$(libgc_static_libs)

CLASS = $(mcs_topdir)/class/lib/net_2_0
RUNTIME = MONO_PATH=$(CLASS) $(top_builddir)/runtime/mono-wrapper
RUNTIME_AOTCHECK = MONO_PATH=$(CLASS):. $(top_builddir)/runtime/mono-wrapper
MCS = $(RUNTIME) $(CLASS)/gmcs.exe -unsafe -nowarn:0162
ILASM = $(RUNTIME) $(CLASS)/ilasm.exe
AM_CFLAGS = \
	-I$(top_srcdir) 	\
	$(LIBGC_CFLAGS)		\
	$(GLIB_CFLAGS)

# The mingw math.h has "extern inline" functions that dont appear in libs, so
# optimisation is required to actually inline them
#PLATFORM_CFLAGS = -O

# hack for automake to have the same source file in a library and a bin
genmdesc_CFLAGS = $(AM_CFLAGS)
monoldflags = -Wl,-version-script=$(srcdir)/ldscript $(export_ldflags)
#monoldflags = $(export_ldflags)
monobinldflags = -Wl,-version-script=$(srcdir)/ldscript.mono $(export_ldflags)
#monobinldflags = $(export_ldflags)
libmono_la_LDFLAGS = $(monoldflags)
#libmono_la_LDFLAGS = -no-undefined -avoid-version -Wl,--kill-at $(monoldflags)
lib_LTLIBRARIES = libmono.la
noinst_LTLIBRARIES = libmono-static.la
mono_SOURCES = \
	main.c

LIBMONO_DTRACE_OBJECT = 
#LIBMONO_DTRACE_OBJECT = .libs/mono-dtrace.$(OBJEXT)
MONO_DTRACE_OBJECT = 
##MONO_DTRACE_OBJECT = 
#MONO_DTRACE_OBJECT = mono-dtrace.$(OBJEXT)
#MONO_LIB = libmono.la

# Link libmono into mono statically
# This leads to higher performance, especially with TLS
MONO_LIB = libmono-static.la
mono_LDADD = \
	$(MONO_LIB)			\
	$(GLIB_LIBS)		\
	-lm	\
	$(MONO_DTRACE_OBJECT)

mono_LDFLAGS = \
	$(static_flags) -export-dynamic $(monobinldflags)


# Create monow.exe, linked for the 'windows' subsystem
#monow_LDADD = $(mono_LDADD)
#monow_LDFLAGS = $(mono_LDFLAGS) -mwindows
#monow_SOURCES = $(mono_SOURCES)
genmdesc_SOURCES = \
	mini.h		\
	genmdesc.c	\
	helpers.c


# Don't link this against libmonoruntime to speed up rebuilds
genmdesc_LDADD = \
	$(monodir)/mono/utils/libmonoutils.la $(monodir)/mono/metadata/opcodes.lo -lm	\
	$(GLIB_LIBS)

x86_sources = \
	mini-x86.c		\
	mini-x86.h		\
	exceptions-x86.c	\
	tramp-x86.c

amd64_sources = \
	mini-amd64.c		\
	mini-amd64.h		\
	exceptions-amd64.c	\
	tramp-amd64.c

ppc_sources = \
	mini-ppc.c		\
	mini-ppc.h		\
	exceptions-ppc.c	\
	tramp-ppc.c

arm_sources = \
	mini-arm.c		\
	mini-arm.h		\
	exceptions-arm.c	\
	tramp-arm.c

mips_sources = \
	mini-mips.c		\
	mini-mips.h		\
	exceptions-mips.c	\
	tramp-mips.c

sparc_sources = \
	mini-sparc.c		\
	mini-sparc.h		\
	exceptions-sparc.c	\
	tramp-sparc.c

s390_sources = \
	mini-s390.c		\
	mini-s390.h		\
	exceptions-s390.c	\
	tramp-s390.c

s390x_sources = \
	mini-s390x.c		\
	mini-s390x.h		\
	exceptions-s390x.c	\
	tramp-s390x.c

ia64_sources = \
	mini-ia64.c		\
	mini-ia64.h		\
	exceptions-ia64.c	\
	tramp-ia64.c

alpha_sources = \
	mini-alpha.c		\
	mini-alpha.h		\
	exceptions-alpha.c	\
	tramp-alpha.c

hppa_sources = \
	mini-hppa.c		\
	mini-hppa.h		\
	exceptions-hppa.c	\
	tramp-hppa.c

darwin_sources = \
	mini-darwin.c

windows_sources = \
	mini-windows.c

posix_sources = \
	mini-posix.c

common_sources = \
	mini.c			\
	ir-emit.h		\
	method-to-ir.c		\
	decompose.c		\
	mini.h			\
	version.h		\
	optflags-def.h		\
	jit-icalls.h 		\
	jit-icalls.c 		\
	trace.c			\
	trace.h			\
	patch-info.h		\
	mini-ops.h		\
	mini-arch.h		\
	dominators.c		\
	cfold.c			\
	regalloc.c		\
	regalloc.h		\
	helpers.c		\
	liveness.c		\
	ssa.c			\
	abcremoval.c		\
	abcremoval.h		\
	ssapre.c		\
	ssapre.h		\
	local-propagation.c	\
	driver.c		\
	debug-mini.c		\
	debug-mini.h		\
	linear-scan.c		\
	aot-compiler.c		\
	aot-runtime.c		\
	graph.c			\
	mini-codegen.c		\
	mini-exceptions.c	\
	mini-trampolines.c  	\
	declsec.c		\
	declsec.h		\
	wapihandles.c		\
	branch-opts.c		\
	mini-generic-sharing.c	\
	regalloc2.c		\
	simd-methods.h		\
	simd-intrinsics.c	\
	unwind.h		\
	unwind.c		\
	image-writer.h	\
	image-writer.c	\
	dwarfwriter.h	\
	dwarfwriter.c

test_sources = \
	basic-calls.cs 		\
	basic-long.cs 		\
	bench.cs 		\
	objects.cs 		\
	arrays.cs		\
	basic-float.cs		\
	basic-math.cs		\
	basic.cs		\
	exceptions.cs		\
	devirtualization.cs	\
	iltests.il.in		\
	test.cs			\
	generics.cs		\
	generics-variant-types.il\
	basic-simd.cs

##mono_debugger_arch_sources = mdb-debug-info32.s
mono_debugger_arch_sources = mdb-debug-info64.s
#mono_debugger_sources = 
mono_debugger_sources = debug-debugger.c debug-debugger.h $(mono_debugger_arch_sources)
regtests = basic.exe basic-float.exe basic-long.exe basic-calls.exe objects.exe arrays.exe basic-math.exe exceptions.exe iltests.exe devirtualization.exe generics.exe basic-simd.exe
#arch_sources = $(alpha_sources) $(mono_debugger_sources)
arch_sources = $(amd64_sources) $(mono_debugger_sources)
#arch_sources = $(arm_sources)

# Only support 32-bit targets for now
#arch_sources = $(hppa_sources)
#arch_sources = $(ia64_sources)
#arch_sources = $(mips_sources)
#arch_sources = $(ppc_sources)
#arch_sources = $(ppc_sources)
#arch_sources = $(s390_sources)
#arch_sources = $(s390x_sources)
#arch_sources = $(sparc_sources)
#arch_sources = $(sparc_sources)
#arch_sources = $(x86_sources) $(mono_debugger_sources)
#arch_built = cpu-alpha.h
arch_built = cpu-amd64.h
#arch_built = cpu-arm.h
#arch_built = cpu-hppa.h
#arch_built = cpu-ia64.h
#arch_built = cpu-mips.h
#arch_built = cpu-ppc64.h
#arch_built = cpu-ppc.h
#arch_built = cpu-s390.h
#arch_built = cpu-s390x.h
#arch_built = cpu-sparc.h
#arch_built = cpu-sparc.h
#arch_built = cpu-x86.h
#arch_define = __alpha__
arch_define = __x86_64__
#arch_define = __arm__
#arch_define = __hppa__
#arch_define = __ia64__
#arch_define = __mips__
#arch_define = __ppc64__
#arch_define = __ppc__
#arch_define = __s390__
#arch_define = __s390__
#arch_define = __sparc__
#arch_define = __sparc__
#arch_define = __i386__

# pick up arm_dpimacros.h and arm_fpamacros.h
#ARCH_CFLAGS = -I../arch/arm
#arch_BURGSRC = $(srcdir)/inssel-long32.brg $(srcdir)/inssel-s390.brg
#os_sources = $(darwin_sources) $(posix_sources)
os_sources = $(posix_sources)
#os_sources = $(windows_sources)
libmono_la_SOURCES = $(common_sources) $(arch_sources) $(os_sources)
libmono_static_la_SOURCES = $(libmono_la_SOURCES)
nodist_libmono_static_la_SOURCES = $(nodist_libmono_la_SOURCES)
libmono_static_la_LDFLAGS = -static
libmono_static_la_LIBADD = $(static_libs) $(MONO_DTRACE_OBJECT)
BURGSRC = $(common_BURGSRC) $(arch_BURGSRC)
libmonoincludedir = $(includedir)/mono-$(API_VER)/mono/jit
libmonoinclude_HEADERS = jit.h
libmono_la_LIBADD = \
	$(libs) $(LIBMONO_DTRACE_OBJECT)

GENMDESC_PRG = ./genmdesc

# we don't always use the perl impl because it's an additional
# build dependency for the poor windows users
# $(arch_define) is the preprocessor symbol that enables all the opcodes
# for the specific platform in mini-ops.h
#GENMDESC_PRG = perl $(srcdir)/genmdesc.pl $(arch_define) $(srcdir)
pkgconfigdir = $(libdir)/pkgconfig
#BUILT_SOURCES = version.h
BUILT_SOURCES = version.h $(arch_built)
CLEANFILES = $(BUILT_SOURCES) *.exe *.dll
EXTRA_DIST = $(common_BURGSRC) cprop.c TestDriver.cs ldscript ldscript.mono \
	genmdesc.pl	\
	$(test_sources) \
	$(x86_sources) cpu-x86.md \
	$(amd64_sources) cpu-amd64.md \
	$(ppc_sources) cpu-ppc.md cpu-ppc64.md \
	$(arm_sources) cpu-arm.md \
	$(mips_sources) cpu-mips.md \
	$(sparc_sources) cpu-sparc.md \
	$(s390_sources) cpu-s390.md \
	$(s390x_sources) cpu-s390x.md \
	$(ia64_sources) cpu-ia64.md \
	$(alpha_sources) cpu-alpha.md \
	$(hppa_sources) cpu-hppa.md 	\
	$(windows_sources)		\
	$(darwin_sources)		\
	$(posix_sources)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj .s
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  mono/mini/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  mono/mini/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmono-static.la: $(libmono_static_la_OBJECTS) $(libmono_static_la_DEPENDENCIES) 
	$(if $(V),,@echo -e "LD\t$@";) $(libmono_static_la_LINK) $(am_libmono_static_la_rpath) $(libmono_static_la_OBJECTS) $(libmono_static_la_LIBADD) $(LIBS)
libmono.la: $(libmono_la_OBJECTS) $(libmono_la_DEPENDENCIES) 
	$(if $(V),,@echo -e "LD\t$@";) $(libmono_la_LINK) $(am_libmono_la_rpath) $(libmono_la_OBJECTS) $(libmono_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(if $(V),,--quiet) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
genmdesc$(EXEEXT): $(genmdesc_OBJECTS) $(genmdesc_DEPENDENCIES) 
	@rm -f genmdesc$(EXEEXT)
	$(if $(V),,@echo -e "LD\t$@";) $(genmdesc_LINK) $(genmdesc_OBJECTS) $(genmdesc_LDADD) $(LIBS)
mono$(EXEEXT): $(mono_OBJECTS) $(mono_DEPENDENCIES) 
	@rm -f mono$(EXEEXT)
	$(if $(V),,@echo -e "LD\t$@";) $(mono_LINK) $(mono_OBJECTS) $(mono_LDADD) $(LIBS)
monow$(EXEEXT): $(monow_OBJECTS) $(monow_DEPENDENCIES) 
	@rm -f monow$(EXEEXT)
	$(if $(V),,@echo -e "LD\t$@";) $(monow_LINK) $(monow_OBJECTS) $(monow_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/abcremoval.Plo
include ./$(DEPDIR)/aot-compiler.Plo
include ./$(DEPDIR)/aot-runtime.Plo
include ./$(DEPDIR)/branch-opts.Plo
include ./$(DEPDIR)/cfold.Plo
include ./$(DEPDIR)/debug-debugger.Plo
include ./$(DEPDIR)/debug-mini.Plo
include ./$(DEPDIR)/declsec.Plo
include ./$(DEPDIR)/decompose.Plo
include ./$(DEPDIR)/dominators.Plo
include ./$(DEPDIR)/driver.Plo
include ./$(DEPDIR)/dwarfwriter.Plo
include ./$(DEPDIR)/exceptions-alpha.Plo
include ./$(DEPDIR)/exceptions-amd64.Plo
include ./$(DEPDIR)/exceptions-arm.Plo
include ./$(DEPDIR)/exceptions-hppa.Plo
include ./$(DEPDIR)/exceptions-ia64.Plo
include ./$(DEPDIR)/exceptions-mips.Plo
include ./$(DEPDIR)/exceptions-ppc.Plo
include ./$(DEPDIR)/exceptions-s390.Plo
include ./$(DEPDIR)/exceptions-s390x.Plo
include ./$(DEPDIR)/exceptions-sparc.Plo
include ./$(DEPDIR)/exceptions-x86.Plo
include ./$(DEPDIR)/genmdesc-genmdesc.Po
include ./$(DEPDIR)/genmdesc-helpers.Po
include ./$(DEPDIR)/graph.Plo
include ./$(DEPDIR)/helpers.Plo
include ./$(DEPDIR)/image-writer.Plo
include ./$(DEPDIR)/jit-icalls.Plo
include ./$(DEPDIR)/linear-scan.Plo
include ./$(DEPDIR)/liveness.Plo
include ./$(DEPDIR)/local-propagation.Plo
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/method-to-ir.Plo
include ./$(DEPDIR)/mini-alpha.Plo
include ./$(DEPDIR)/mini-amd64.Plo
include ./$(DEPDIR)/mini-arm.Plo
include ./$(DEPDIR)/mini-codegen.Plo
include ./$(DEPDIR)/mini-darwin.Plo
include ./$(DEPDIR)/mini-exceptions.Plo
include ./$(DEPDIR)/mini-generic-sharing.Plo
include ./$(DEPDIR)/mini-hppa.Plo
include ./$(DEPDIR)/mini-ia64.Plo
include ./$(DEPDIR)/mini-mips.Plo
include ./$(DEPDIR)/mini-posix.Plo
include ./$(DEPDIR)/mini-ppc.Plo
include ./$(DEPDIR)/mini-s390.Plo
include ./$(DEPDIR)/mini-s390x.Plo
include ./$(DEPDIR)/mini-sparc.Plo
include ./$(DEPDIR)/mini-trampolines.Plo
include ./$(DEPDIR)/mini-windows.Plo
include ./$(DEPDIR)/mini-x86.Plo
include ./$(DEPDIR)/mini.Plo
include ./$(DEPDIR)/regalloc.Plo
include ./$(DEPDIR)/regalloc2.Plo
include ./$(DEPDIR)/simd-intrinsics.Plo
include ./$(DEPDIR)/ssa.Plo
include ./$(DEPDIR)/ssapre.Plo
include ./$(DEPDIR)/trace.Plo
include ./$(DEPDIR)/tramp-alpha.Plo
include ./$(DEPDIR)/tramp-amd64.Plo
include ./$(DEPDIR)/tramp-arm.Plo
include ./$(DEPDIR)/tramp-hppa.Plo
include ./$(DEPDIR)/tramp-ia64.Plo
include ./$(DEPDIR)/tramp-mips.Plo
include ./$(DEPDIR)/tramp-ppc.Plo
include ./$(DEPDIR)/tramp-s390.Plo
include ./$(DEPDIR)/tramp-s390x.Plo
include ./$(DEPDIR)/tramp-sparc.Plo
include ./$(DEPDIR)/tramp-x86.Plo
include ./$(DEPDIR)/unwind.Plo
include ./$(DEPDIR)/wapihandles.Plo

.c.o:
	$(if $(V),,@echo -e "CC\t$@";) $(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(if $(V),,@echo -e "CC\t$@";) $(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(if $(V),,@echo -e "CC\t$@";) $(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(if $(V),,@)mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

genmdesc-genmdesc.o: genmdesc.c
	$(if $(V),,@echo -e "CC\t$@";) $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-genmdesc.o -MD -MP -MF $(DEPDIR)/genmdesc-genmdesc.Tpo -c -o genmdesc-genmdesc.o `test -f 'genmdesc.c' || echo '$(srcdir)/'`genmdesc.c
	$(if $(V),,@)mv -f $(DEPDIR)/genmdesc-genmdesc.Tpo $(DEPDIR)/genmdesc-genmdesc.Po
#	source='genmdesc.c' object='genmdesc-genmdesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-genmdesc.o `test -f 'genmdesc.c' || echo '$(srcdir)/'`genmdesc.c

genmdesc-genmdesc.obj: genmdesc.c
	$(if $(V),,@echo -e "CC\t$@";) $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-genmdesc.obj -MD -MP -MF $(DEPDIR)/genmdesc-genmdesc.Tpo -c -o genmdesc-genmdesc.obj `if test -f 'genmdesc.c'; then $(CYGPATH_W) 'genmdesc.c'; else $(CYGPATH_W) '$(srcdir)/genmdesc.c'; fi`
	$(if $(V),,@)mv -f $(DEPDIR)/genmdesc-genmdesc.Tpo $(DEPDIR)/genmdesc-genmdesc.Po
#	source='genmdesc.c' object='genmdesc-genmdesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-genmdesc.obj `if test -f 'genmdesc.c'; then $(CYGPATH_W) 'genmdesc.c'; else $(CYGPATH_W) '$(srcdir)/genmdesc.c'; fi`

genmdesc-helpers.o: helpers.c
	$(if $(V),,@echo -e "CC\t$@";) $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-helpers.o -MD -MP -MF $(DEPDIR)/genmdesc-helpers.Tpo -c -o genmdesc-helpers.o `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c
	$(if $(V),,@)mv -f $(DEPDIR)/genmdesc-helpers.Tpo $(DEPDIR)/genmdesc-helpers.Po
#	source='helpers.c' object='genmdesc-helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-helpers.o `test -f 'helpers.c' || echo '$(srcdir)/'`helpers.c

genmdesc-helpers.obj: helpers.c
	$(if $(V),,@echo -e "CC\t$@";) $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -MT genmdesc-helpers.obj -MD -MP -MF $(DEPDIR)/genmdesc-helpers.Tpo -c -o genmdesc-helpers.obj `if test -f 'helpers.c'; then $(CYGPATH_W) 'helpers.c'; else $(CYGPATH_W) '$(srcdir)/helpers.c'; fi`
	$(if $(V),,@)mv -f $(DEPDIR)/genmdesc-helpers.Tpo $(DEPDIR)/genmdesc-helpers.Po
#	source='helpers.c' object='genmdesc-helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genmdesc_CFLAGS) $(CFLAGS) -c -o genmdesc-helpers.obj `if test -f 'helpers.c'; then $(CYGPATH_W) 'helpers.c'; else $(CYGPATH_W) '$(srcdir)/helpers.c'; fi`

.s.o:
	$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.lo:
	$(LTCCASCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmonoincludeHEADERS: $(libmonoinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libmonoincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libmonoincludedir)"
	@list='$(libmonoinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libmonoincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libmonoincludedir)/$$f'"; \
	  $(libmonoincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libmonoincludedir)/$$f"; \
	done

uninstall-libmonoincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmonoinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libmonoincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libmonoincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libmonoincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libmonoincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libmonoincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libmonoincludeHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libmonoincludeHEADERS

	$(PLATFORM_CFLAGS) $(ARCH_CFLAGS)

#export HOST_CC

# We build this after libmono was built so it contains the date when the final
# link was done
buildver.h: libmono-static.la
	@echo "const char *build_date = \"`date`\";" > buildver.h

main.$(OBJEXT): buildver.h

#mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono.d mini.lo $(monodir)/mono/metadata/libmonoruntime-static.la
#	DTRACE="$(DTRACE)" DTRACEFLAGS="$(DTRACEFLAGS)" AR="$(AR)" $(SHELL) $(top_srcdir)/data/dtrace-prelink.sh \
#	$@ $(top_srcdir)/data/mono.d $(monodir)/mono/metadata/libmonoruntime-static.la mini.lo

#.libs/mono-dtrace.$(OBJEXT): $(top_srcdir)/data/mono.d mini.lo $(monodir)/mono/metadata/libmonoruntime.la
#	DTRACE="$(DTRACE)" DTRACEFLAGS="$(DTRACEFLAGS)" AR="$(AR)" $(SHELL) $(top_srcdir)/data/dtrace-prelink.sh \
#	--pic $@ $(top_srcdir)/data/mono.d $(monodir)/mono/metadata/libmonoruntime.la mini.lo

basic-simd.exe: basic-simd.cs
	$(MCS) -out:$@ $< -r:TestDriver.dll -r:Mono.Simd.dll

generics.exe: generics.cs TestDriver.dll generics-variant-types.dll
	$(MCS) -out:$@ $< -r:TestDriver.dll -r:generics-variant-types.dll

%.exe: %.cs TestDriver.dll
	$(MCS) -out:$@ -unsafe $< -r:TestDriver.dll

iltests.il: iltests.il.in Makefile.am
	echo '// DO NOT EDIT: This file has been generated from iltests.il.in' > iltests.il
	cpp -Darch=$(arch_define) < $(srcdir)/iltests.il.in | sed 's/^#.*//' >> iltests.il

%.exe: %.il
	$(ILASM) -output=$@ $<

TestDriver.dll: $(srcdir)/TestDriver.cs
	$(MCS) -out:$@ -target:library $<

generics-variant-types.dll: generics-variant-types.il
	$(ILASM) -dll -output=$@ $<

cpu-x86.h: cpu-x86.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-x86.md cpu-x86.h x86_desc

cpu-amd64.h: cpu-amd64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-amd64.md cpu-amd64.h amd64_desc

cpu-ppc.h: cpu-ppc.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-ppc.md cpu-ppc.h ppcg4

cpu-ppc64.h: cpu-ppc64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-ppc64.md cpu-ppc64.h ppc64_cpu_desc

cpu-arm.h: cpu-arm.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-arm.md cpu-arm.h arm_cpu_desc

cpu-sparc.h: cpu-sparc.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-sparc.md cpu-sparc.h sparc_desc

cpu-s390.h: cpu-s390.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-s390.md cpu-s390.h s390_cpu_desc

cpu-s390x.h: cpu-s390x.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-s390x.md cpu-s390x.h s390x_cpu_desc

cpu-ia64.h: cpu-ia64.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-ia64.md cpu-ia64.h ia64_desc

cpu-alpha.h: cpu-alpha.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-alpha.md cpu-alpha.h alpha_desc

cpu-hppa.h: cpu-hppa.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-hppa.md cpu-hppa.h hppa_desc

cpu-mips.h: cpu-mips.md genmdesc$(EXEEXT)
	$(GENMDESC_PRG) $(srcdir)/cpu-mips.md cpu-mips.h mips_desc

testi: mono test.exe
	$(RUNTIME) -v -v --ncompile 1 --compile Test:$(mtest) test.exe

# ensure the tests are actually correct
checktests: $(regtests)
	for i in $(regtests); do $(RUNTIME) $$i; done

rcheck: mono $(regtests)
	$(RUNTIME) --regression $(regtests)

aotcheck: mono $(regtests)
	rm -f *.exe.so
	$(RUNTIME) --aot $(regtests) || exit 1
	for i in $(regtests); do $(RUNTIME_AOTCHECK) --regression $$i || exit 1; done
	rm -f *.exe.so

# This is not expected to run successfully
fullaotcheck: mono $(regtests)
	rm -rf fullaot-tmp
	mkdir fullaot-tmp
	cp $(CLASS)/mscorlib.dll $(regtests) generics-variant-types.dll TestDriver.dll fullaot-tmp/
	cp $(regtests) fullaot-tmp/
	MONO_PATH=fullaot-tmp $(top_builddir)/runtime/mono-wrapper --aot=full fullaot-tmp/* || exit 1
	for i in $(regtests); do echo $$i; MONO_PATH=fullaot-tmp $(top_builddir)/runtime/mono-wrapper --full-aot fullaot-tmp/$$i || exit 1; done

bench: mono test.exe
	time env $(RUNTIME) --ncompile $(count) --compile Test:$(mtest) test.exe

mbench: test.exe
	time $(monodir)/mono/jit/mono --ncompile $(count) --compile Test:$(mtest) test.exe

stat1: mono bench.exe
	$(RUNTIME) --verbose --statfile stats.pl --regression bench.exe
	perl viewstat.pl stats.pl

stat2: mono basic.exe
	$(RUNTIME) --verbose --statfile stats.pl --regression basic.exe
	perl viewstat.pl -e stats.pl

stat3: mono bench.exe
	$(RUNTIME) --statfile stats.pl --ncompile 1000 --compile Tests:test_0_many_nested_loops bench.exe 
	perl viewstat.pl stats.pl

docu: mini.sgm
	docbook2txt mini.sgm

check-local: rcheck

clean-local:
	rm -f mono a.out gmon.out *.o buildver.h test.exe

version.h: Makefile
	if test -d $(top_srcdir)/.git/svn; then svn_info='git svn info'; fi; \
	if test -d $(srcdir)/.svn; then svn_info='svn info'; fi; \
	if test -n "$$svn_info"; then \
		(cd $(top_srcdir); \
			LANG=C; export LANG; \
			branch=`$$svn_info | grep URL | sed -e 's/.*source//' -e 's,mono/?$$,,'`; \
			version=`$$svn_info | grep Revision | sed 's/.*: //'`; \
			echo "#define FULL_VERSION \"$$branch r$$version\""; \
		); \
	else \
		echo "#define FULL_VERSION \"tarball\""; \
	fi > version.h

# Utility target for patching libtool to speed up linking
patch-libtool:
	sed -e 's,if (for obj in $$oldobjs,if (for obj in "",g' < ../../libtool > 2; mv 2 ../../libtool
	chmod a+x ../../libtool
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
